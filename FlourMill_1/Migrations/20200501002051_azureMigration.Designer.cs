// <auto-generated />
using System;
using DatingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlourMill_1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200501002051_azureMigration")]
    partial class azureMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlourMill_1.Models.AdminRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<string>("RateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdministratorID");

                    b.ToTable("AdminRate");
                });

            modelBuilder.Entity("FlourMill_1.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NationalId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalFlourMillPayment")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("FlourMill_1.Models.Bakery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NationalId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Bakery");
                });

            modelBuilder.Entity("FlourMill_1.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<int>("BakeryID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatues")
                        .HasColumnType("int");

                    b.Property<string>("Order_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentPrice")
                        .HasColumnType("int");

                    b.Property<double>("TotalPayment")
                        .HasColumnType("float");

                    b.Property<double>("TotalTons")
                        .HasColumnType("float");

                    b.Property<string>("TruckDriverID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("BakeryID");

                    b.HasIndex("TruckDriverID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FlourMill_1.Models.OrderProducts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Badge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("tons")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("orderProducts");
                });

            modelBuilder.Entity("FlourMill_1.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<string>("BadgeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpireDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FlourMill_1.Models.ProductRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<int>("BakeryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("RateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("BakeryId");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductRate");
                });

            modelBuilder.Entity("FlourMill_1.Models.Report", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<string>("Flour_Mill_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuperVisorID")
                        .HasColumnType("int");

                    b.Property<double>("TotalBadgesForFlourMill")
                        .HasColumnType("float");

                    b.Property<string>("TotalPayment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("SuperVisorID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("FlourMill_1.Models.SuperVisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NationalId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuperVisor");
                });

            modelBuilder.Entity("FlourMill_1.Models.TruckDriver", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NationalId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministratorID");

                    b.ToTable("TruckDriver");
                });

            modelBuilder.Entity("FlourMill_1.Models.Wishlist", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Badgename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BakeryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("BakeryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("FlourMill_1.Models.AdminRate", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("AdminRate")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlourMill_1.Models.Order", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("Order")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.Bakery", "Bakery")
                        .WithMany("Order")
                        .HasForeignKey("BakeryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.TruckDriver", "TruckDriver")
                        .WithMany("Orders")
                        .HasForeignKey("TruckDriverID");
                });

            modelBuilder.Entity("FlourMill_1.Models.OrderProducts", b =>
                {
                    b.HasOne("FlourMill_1.Models.Order", "order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlourMill_1.Models.Product", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("Product")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlourMill_1.Models.ProductRate", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("ProductRate")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.Bakery", "Bakery")
                        .WithMany("ProductRates")
                        .HasForeignKey("BakeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.Product", "Product")
                        .WithMany("ProductRate")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlourMill_1.Models.Report", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("Report")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.SuperVisor", "SuperVisor")
                        .WithMany("Report")
                        .HasForeignKey("SuperVisorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlourMill_1.Models.TruckDriver", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("TruckDrivers")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlourMill_1.Models.Wishlist", b =>
                {
                    b.HasOne("FlourMill_1.Models.Administrator", "Administrator")
                        .WithMany("Wishlists")
                        .HasForeignKey("AdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.Bakery", "bakery")
                        .WithMany("wishlists")
                        .HasForeignKey("BakeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlourMill_1.Models.Product", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
